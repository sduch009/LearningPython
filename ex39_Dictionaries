#Ex 39: Dictionaries
#A dictionary (dict) is a way to stor data just like a list,
#but instead of using only numbers to get the data you can use almost anything
#This lets you treat a dict like it's a database for storing and organizing data.

#>>>things = ['a', 'b', 'c', 'd']
#>>>print(things[1])
#b
#>>>things[1] = 'z'
#>>>print(things[1])
#z
#>>>things
# ['a', 'z', 'c', 'd']

#A dict lets you use anything, not just numbers.  Yes, a dict associates one thing to another, no matter what it is:

# >>>stuff = {'name': 'Zed', 'age': 39, 'heaight': 6 * 12 + 2}
# >>>print(stuff['name'])
# Zed
# >>>print(stuff['age'])
#39
# >>>print(stuff['height'])
#74
# >>> stuff['city'] = "SF"
# >>> print(stuff['city'])
# SF

#heres how you delet things from dict
#>>>del stuff['city']

#Example
# create a mapping of state to abbreviation
states = {
    'Oregon': 'OR',
    'Florida': 'FL',
    'California': 'CA',
    'New York': 'NY',
    'Michigan': 'MI'
}

# create a basic set of states and some cities in them
cities = {
    'CA': 'San Francisco',
    'MI': 'Detroit',
    'FL': 'Jacksonville'
}

#add some more cities
cities['NY'] = 'New York'
cities['OR'] = 'Portland'

# print out some cities
print('-' * 10) # will print '----------'
print("NY State has: ", cities['NY'])
print("OR State has: ", cities['OR'])

# print some states
print('-' * 10)
print("Michigan's abbreviation is: ", states['Michigan'])
print("Florida's abbreviation is: ", states['Florida'])

# do it by using the state then cities dict
print('-' * 10)
print("Michigan has: ", cities[states['Michigan']]) # has: (the city in the state of michigan)
print("Florida has: ", cities[states['Florida']])

# print every state abbreviation
print('-' * 10)
for state, abbrev in list(states.items()):
    print(f"{state} is abbreviated {abbrev}")

#print every city in state
print('-' * 10)
for avvrev, city in list(cities.items()):
    print(f"{abbrev} has the city {city}")

# now do both at the same time
print('-' * 10)
for state, abbrev in list(states.items()):
    print(f"{state} state is abbreviated {abbrev}")
    print(f"and has city {cities[abbrev]}")

#safely get an abbreviation by state that might not be there:
print('-' * 10)
state = states.get('texas')

if not state:
    print("Sorry, no Texas.")

#Get a city with a default value
city = cities.get('TX', 'Doest Not Exist')
print(f"The city for the state 'TX' is: {city}")
